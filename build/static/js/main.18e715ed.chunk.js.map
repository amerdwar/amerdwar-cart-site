{"version":3,"sources":["pages/home.js","components/productItem.js","pages/products.js","api/products.js","components/cartItem.js","store/actions/actions.js","store/actions/types.js","pages/cart.js","pages/product.js","components/cartIcon.js","store/store.js","store/reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","Component","ProductItem","className","src","this","props","product","image","alt","name","price","to","id","Products","state","loading","products","Promise","resolve","then","data","setTimeout","setState","map","index","key","CartItem","removeFromCart","item","quantity","onClick","connect","dispatch","type","Cart","btnPlaceOrderClasses","classNames","enableBtnPlaceOrder","btnClearCartClasses","enableBtnClearCart","cartItems","total","disabled","placeOrder","clearCart","enableBtn","undefined","cart","length","reduce","code","message","res","result","createPlaceOrder","Product","changeQuantity","event","target","value","alert","addToCart","find","getProductById","match","params","producti","width","description","max","min","onChange","CartIcon","totalQuantity","parseInt","initialState","localStorage","getItem","JSON","parse","e","loadStateFromLocalStorage","enableReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","applyThunk","applyMiddleware","thunk","store","createStore","action","addToCard","confirm","findIndex","splice","compose","subscribe","throttle","getState","console","log","setItem","stringify","App","data-toggle","data-target","aria-controls","aria-expanded","aria-label","path","component","exact","AppWithStore","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"8lCAGqBA,E,uKAEjB,OAAO,yC,GAFuBC,aCDbC,E,uKAEb,OAEI,yBAAKC,UAAU,QACX,yBAAKC,IAAKC,KAAKC,MAAMC,QAAQC,MAAOL,UAAU,gBAAgBM,IAAI,QAClE,yBAAKN,UAAU,aACvB,wBAAIA,UAAU,cAAcE,KAAKC,MAAMC,QAAQG,MAC/C,uBAAGP,UAAU,aAAaE,KAAKC,MAAMC,QAAQI,MAA7C,MACY,kBAAC,IAAD,CAAMC,GAAI,aAAaP,KAAKC,MAAMC,QAAQM,GAAIV,UAAU,mBAAxD,iB,GATqBF,a,YCCpBa,E,4MAEjBC,MAAQ,CACJC,SAAQ,EACRC,SAAU,I,kEAGO,IAAD,OCPbC,QAAQC,QAAQF,GDQVG,MAAK,SAAAC,GACtBC,YAAW,kBACC,EAAKC,SAAS,CACVP,SAAQ,EACRC,SAAUI,MACX,U,+BAIP,OAAIhB,KAAKU,MAAMC,QACR,cAEA,6BACH,wCACA,yBAAKb,UAAU,OACVE,KAAKU,MAAME,SAASO,KAAI,SAACjB,EAASkB,GAAV,OACrB,yBAAKtB,UAAU,QAAQuB,IAAKD,GACxB,kBAAC,EAAD,CAAalB,QAASA,c,GAzBRN,a,YEE/B0B,E,4MACHC,eAAe,WAEf,EAAKtB,MAAMsB,eAAe,EAAKtB,MAAMuB,KAAKtB,QAAQM,K,uDAG9C,OAEI,yBAAKV,UAAU,QACX,yBAAKC,IAAKC,KAAKC,MAAMuB,KAAKtB,QAAQC,MAAOL,UAAU,gBAAgBM,IAAI,QACvE,yBAAKN,UAAU,aACvB,wBAAIA,UAAU,cAAcE,KAAKC,MAAMuB,KAAKtB,QAAQG,MACpD,uBAAGP,UAAU,aAAaE,KAAKC,MAAMuB,KAAKtB,QAAQI,MAAlD,MACA,6BAHQ,aAIGN,KAAKC,MAAMuB,KAAKC,SAC3B,6BALQ,UAMAzB,KAAKC,MAAMuB,KAAKtB,QAAQI,MAAMN,KAAKC,MAAMuB,KAAKC,SAN9C,IAOR,6BACA,6BACY,kBAAC,IAAD,CAAMlB,GAAG,IAAIT,UAAU,iBAAiB4B,QAAS1B,KAAKuB,gBAClD,uBAAGzB,UAAU,gBADjB,iB,GAnBIF,aAoCT+B,cAAQ,MATI,SAACC,GACxB,MAAO,CACHL,eAAgB,SAACf,GAAD,OAAQoB,ECGzB,SAAwBpB,GAE7B,MAAO,CACLqB,KCvC6B,oBDwC7BrB,MDPqCe,CAAef,QAOzCmB,CAAkCL,G,iBGnC3CQ,E,uKAIE,IAAIC,EACJC,IAAY,4BAA4B,CAAC,UAAahC,KAAKC,MAAMgC,sBAC7DC,EACJF,IAAY,2BAA2B,CAAC,UAAahC,KAAKC,MAAMkC,qBAEpE,OAAM,6BACE,oCACR,yBAAKrC,UAAU,OAEVE,KAAKC,MAAMmC,UAAUjB,KAAI,SAACK,GAAD,OACtB,yBAAK1B,UAAU,QAAQuB,IAAKG,EAAKtB,QAAQM,IACrC,kBAAC,EAAD,CAAUgB,KAAMA,SAI5B,6BACA,sCACYxB,KAAKC,MAAMoC,MADvB,KAIA,4BAAQC,UAAWtC,KAAKC,MAAMgC,oBAAqBnC,UAAWiC,EAAsBL,QAAS1B,KAAKC,MAAMsC,YAAxG,eACA,4BAAQD,UAAWtC,KAAKC,MAAMkC,mBAAoBrC,UAAWoC,EAAqBR,QAAS1B,KAAKC,MAAMuC,WAAtG,mB,GAzBe5C,aAiDJ+B,eApBW,SAACjB,GACvB,IAAI+B,GAAY,EAKhB,YAH2BC,UAAfhC,EAAMiC,MAAsBjC,EAAMiC,KAAKC,OAAS,IACxDH,GAAY,GAET,CACHL,UAAW1B,EAAMiC,KACjBN,MAAO3B,EAAMiC,KAAKE,QAAO,SAACR,EAAOb,GAAR,OAAiBa,EAAQb,EAAKC,SAAWD,EAAKtB,QAAQI,QAAO,GACtF2B,oBAAqBQ,EACrBN,mBAAmBM,KAUe,CAACD,UFxBpC,WACL,OAAO,SAAAZ,GAAQ,OAAEA,EAAS,CAACC,KC9BH,iBCqD2BU,WFnC9C,WACL,OACE,SAACX,GFXMf,QAAQC,QAAQ,CAACgC,KAAK,IAAIC,QAAQ,2CEYvBhC,MAAK,SAAAiC,GAAG,OAC5BpB,EAZF,SAA0BoB,GACxB,MAAO,CACLnB,KCXuB,cDYvBoB,OAAOD,GASAE,CAAiBF,UE+BbrB,CAAmDG,GCnD5DqB,E,4MACFzC,MAAQ,CACJC,SAAS,EACTT,QAAS,GACTuB,SAAU,G,EAEd2B,eAAiB,SAACC,GAEVA,EAAMC,OAAOC,MAAQ,IACrBC,MAAM,oBAEN,EAAKtC,SAAS,CACVO,SAAU,MAId,EAAKP,SAAS,CACVO,SAAU4B,EAAMC,OAAOC,S,EAcnCE,UAAY,SAACvD,GAET,OAAO,EAAKD,MAAMwD,UAAUvD,EAAS,EAAKQ,MAAMe,W,kEAZ/B,IAAD,QLpBjB,SAAwBjB,GAC3B,IAAMN,EAAUU,EAAS8C,MAAK,SAAAlC,GAAI,OAAIA,EAAKhB,KAAOA,KAClD,OAAOK,QAAQC,QAAQZ,IKqBnByD,CAFW3D,KAAKC,MAAM2D,MAAMC,OAAOrD,IAEhBO,MAAK,SAAA+C,GAAQ,OAC5B7C,YAAW,kBACP,EAAKC,SAAS,CAAEhB,QAAS4D,EAAUnD,SAAS,MAAU,U,+BASxD,IAAD,OACL,GAAIX,KAAKU,MAAMC,QACX,MAAO,cACX,IAAMT,EAAUF,KAAKU,MAAMR,QAC3B,OAAQ,yBAAKJ,UAAU,OACnB,yBAAKA,UAAU,SACX,yBAAKC,IAAKG,EAAQC,MAAO4D,MAAO,UAEpC,yBAAKjE,UAAU,SACX,4BAAKI,EAAQG,MACb,qCAAWH,EAAQI,MAAnB,KACA,+BAAKJ,EAAQ8D,aAEb,2BAAOnC,KAAK,SAASoC,IAAI,KAAKC,IAAI,IAAIX,MAAOvD,KAAKU,MAAMe,SAAU0C,SAAUnE,KAAKoD,iBACjF,6BACA,6BACA,sCAAYpD,KAAKU,MAAMe,SAAWvB,EAAQI,OAC1C,4BAAQR,UAAU,kBAAkB4B,QAAS,kBAAM,EAAK+B,UAAUvD,KAAlE,qB,GApDMN,aAmEP+B,cAAQ,MATI,SAACC,GACxB,MAAO,CACH6B,UAAW,SAACvD,EAASuB,GAAV,OAAuBG,EH9DnC,SAAmB1B,EAASuB,GACjC,MAAO,CACLI,KCJuB,cDKvB3B,UACAuB,YG0D+CgC,CAAUvD,EAASuB,QAOvDE,CAAkCwB,GClEnCiB,G,MAAd,uKAEQ,OAAQ,yBAAK5D,GAAK,aAClB,kBAAC,IAAD,CAAMD,GAAK,SACP,uBAAGT,UAAU,uBAAb,KACR,0BAAMA,UAAU,sBAAsBE,KAAKC,MAAMoE,qBALrD,GAA+BzE,cAehB+B,eALS,SAACjB,GACzB,MAAO,CACP2D,cAAc3D,EAAMiC,KAAKE,QAAO,SAACR,EAAMb,GAAP,OAAca,EAAQiC,SAAS9C,EAAKC,YAAU,MAG/DE,CAAyByC,G,6CCMxC,IAAMG,EAtBN,WACI,IACI,IAAM7D,EAAQ8D,aAAaC,QAAQ,QACnC,GAAc,OAAV/D,EACA,OAAOgE,KAAKC,MAAMjE,GAGxB,MAAOkE,IAIL,MAAO,CACHjC,KAAK,IAUIkC,GAGfC,EAAsBC,OAAOC,8BAAgCD,OAAOC,+BACpEC,EAAaC,YAAgBC,KAE7BC,EAAQC,aC9BC,SAAqB3E,EAAO4E,GAEvC,OAAQA,EAAOzD,MACX,ILLmB,cKMf,OAoBZ,SAAmBnB,EAAO4E,GAEtB,IAAI9D,EAAOd,EAAMiC,KAAKe,MAAK,SAAAlC,GAAI,OAAIA,EAAKtB,QAAQM,KAAO8E,EAAOpF,QAAQM,MACtE,OAAIgB,GACAA,EAAKC,SAAW6C,SAASgB,EAAO7D,UAAY6C,SAAS9C,EAAKC,UACnD,CACHkB,KAAK,YAAKjC,EAAMiC,QAGb,CACHA,KAAK,GAAD,mBACGjC,EAAMiC,MADT,CAEA,CACIzC,QAASoF,EAAOpF,QAChBuB,SAAU6D,EAAO7D,aAlClB8D,CAAU7E,EAAO4E,GAE5B,ILPyB,oBKQrB,OAuCZ,SAAwB5E,EAAO4E,GAC3B,IAAKP,OAAOS,QAAQ,2CACpB,OAAO9E,EACP,IAAIU,EAAQV,EAAMiC,KAAK8C,WAAU,SAAAjE,GAAI,OAAIA,EAAKtB,QAAQM,KAAO8E,EAAO9E,MAChEY,GAAS,GACTV,EAAMiC,KAAK+C,OAAOtE,EAAO,GAC7B,MAAO,CAAEuB,KAAK,YAAKjC,EAAMiC,OA7CVpB,CAAeb,EAAO4E,GAEjC,ILRmB,cKSf,OA6CZ,SAAoB5E,EAAO4E,GAEvB,OADA9B,MAAM8B,EAAOrC,OAAOF,SACO,MAAvBuC,EAAOrC,OAAOH,KACP,CAAEH,KAAM,IACPjC,EAjDG6B,CAAW7B,EAAO4E,GAE7B,ILZkB,aKad,OAiDZ,SAAmB5E,EAAO4E,GACxB,GAAIP,OAAOS,QAAQ,oCACb,MAAO,CAAE7C,KAAM,IAnDJH,GAKX,QACI,OAAO9B,KDWoB6D,EAAcoB,YAAQV,EAAYH,IAIrEM,EAAMQ,UAAUC,KAAS,kBAfDnF,EAgBT0E,EAAMU,WAfrBC,QAAQC,IAAI,mBACZxB,aAAayB,QAAQ,OAAQvB,KAAKwB,UAAUxF,IAFhD,IAA4BA,IAgBS,MACtB0E,QE3Bf,SAASe,IACP,OACE,kBAAC,IAAD,KACA,yBAAKrG,UAAU,aACd,yBAAKA,UAAU,iDAClB,kBAAC,IAAD,CAAMA,UAAU,eAAeS,GAAG,KAAlC,SACA,4BAAQT,UAAU,iBAAiB+B,KAAK,SACxCuE,cAAY,WAAWC,cAAY,uBACnCC,gBAAc,sBAAsBC,gBAAc,QACjDC,aAAW,qBAEV,0BAAM1G,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BU,GAAG,uBAC3C,wBAAIV,UAAU,mCACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWS,GAAG,KAA9B,QAAuC,0BAAMT,UAAU,WAAhB,eAEzC,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWS,GAAG,aAA9B,aAEF,wBAAIT,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWS,GAAG,SAA9B,WAON,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAQkG,KAAK,IAAIC,UAAW/G,EAAMgH,OAAK,IACvC,kBAAC,IAAD,CAAQF,KAAK,YAAYC,UAAWjG,EAAUkG,OAAK,IACnD,kBAAC,IAAD,CAAQF,KAAK,gBAAgBC,UAAWvD,IACxC,kBAAC,IAAD,CAAQsD,KAAK,QAAQC,UAAW5E,MAkBjB8E,MAVf,WAEE,OACE,kBAAC,IAAD,CAAUxB,MAASA,GACjB,kBAAC,EAAD,QC9CcyB,QACW,cAA7B9B,OAAO+B,SAASC,UAEe,UAA7BhC,OAAO+B,SAASC,UAEhBhC,OAAO+B,SAASC,SAASnD,MACvB,2DCZNoD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxG,MAAK,SAAAyG,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5B,QAAQ4B,MAAMA,EAAM5E,c","file":"static/js/main.18e715ed.chunk.js","sourcesContent":["import React,{ Component } from \"react\";\r\n\r\n\r\nexport default class Home extends Component{\r\nrender(){\r\n    return <div>Home</div>;\r\n}\r\n}","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport default class ProductItem extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"card\" >\r\n                <img src={this.props.product.image} className=\"card-img-top \" alt=\"...\" />\r\n                <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{this.props.product.name}</h5>\r\n        <p className=\"card-text\">{this.props.product.price} $</p>\r\n                    <Link to={\"/products/\"+this.props.product.id} className=\"btn btn-primary\">Details</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport ProductItem from '../components/productItem'\r\nimport  {getAll}  from '../api/products'\r\nexport default class Products extends Component {\r\n\r\n    state = {\r\n        loading:true,\r\n        products: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        getAll().then(data => {\r\nsetTimeout(()=>\r\n            this.setState({\r\n                loading:false,\r\n                products: data\r\n            }),1000);\r\n        });\r\n    }\r\n    render() {\r\n        if (this.state.loading)\r\n        return 'loading ...';\r\n\r\n        return <div>\r\n            <h1>Products</h1>\r\n            <div className=\"row\">\r\n                {this.state.products.map((product, index) =>\r\n                    <div className=\"col-4\" key={index}>\r\n                        <ProductItem product={product} />\r\n                    </div>)\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>;\r\n    }\r\n}","import products from './products.json'\r\n\r\nexport function getAll() {\r\n    return Promise.resolve(products);\r\n}\r\nexport function getProductById(id) {\r\n    const product = products.find(item => item.id === id);\r\n    return Promise.resolve(product);\r\n}\r\n\r\nexport function placeOrder() {\r\n    return Promise.resolve({code:200,message:\"The order has been successfully placed\"});\r\n  //  return Promise.resolve({code:503,message:\"Failed\"});\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { removeFromCart } from '../store/actions/actions'\r\nimport { connect } from \"react-redux\"\r\n\r\n class CartItem extends Component {\r\n    removeFromCart=()=>{\r\n        \r\n    this.props.removeFromCart(this.props.item.product.id);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"card\" >\r\n                <img src={this.props.item.product.image} className=\"card-img-top \" alt=\"...\" />\r\n                <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{this.props.item.product.name}</h5>\r\n        <p className=\"card-text\">{this.props.item.product.price} $</p>\r\n        <br/>\r\n        Quantity: {this.props.item.quantity}\r\n        <br/>\r\n        Total: {this.props.item.product.price*this.props.item.quantity}$\r\n        <br/>\r\n        <br/>\r\n                    <Link to=\"#\" className=\"btn btn-danger\" onClick={this.removeFromCart}>\r\n                        <i className='fa fa-trash'></i> Delete</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeFromCart: (id) => dispatch(removeFromCart(id)),\r\n    };\r\n}\r\n\r\n\r\n    \r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem);","import { ADD_TO_CART, REMOVE_FROME_CART, CLEAR_CART ,PLACE_ORDER} from './types'\r\nimport {placeOrder as placeOrderApi}  from '../../api/products'\r\nexport function addToCart(product, quantity) {\r\n  return {\r\n    type: ADD_TO_CART,\r\n    product,\r\n    quantity\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction createPlaceOrder(res) {\r\n  return {\r\n    type: PLACE_ORDER,\r\n    result:res\r\n  }\r\n}\r\n\r\n//use thunk for placeOrder ,call api and then wait for response \r\nexport function placeOrder() {\r\n  return (\r\n    (dispatch) => {\r\n      placeOrderApi().then(res=>\r\n  dispatch(createPlaceOrder(res))\r\n\r\n);\r\n    })\r\n\r\n}\r\n\r\nexport function clearCart() {\r\n  return dispatch=>dispatch({type:CLEAR_CART});\r\n}\r\n\r\n\r\n//test thunk \r\nexport function removeFromCart(id) {\r\n\r\n  return {\r\n    type: REMOVE_FROME_CART,\r\n    id\r\n  };\r\n\r\n}","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROME_CART = 'REMOVE_FROME_CART';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\nexport const PLACE_ORDER = 'PLACE_ORDER';","import React, { Component } from \"react\";\r\nimport CartItem from '../components/cartItem'\r\nimport { getAll } from '../api/products'\r\nimport { clearCart,placeOrder } from '../store/actions/actions'\r\nimport { connect } from \"react-redux\"\r\nimport  classNames   from 'classnames'\r\nclass Cart extends Component {\r\n\r\n\r\n    render() {\r\n        let btnPlaceOrderClasses =\r\n        classNames ('btn btn-primary btn-block',{'disabled': !this.props.enableBtnPlaceOrder });\r\n        let btnClearCartClasses =\r\n        classNames ('btn btn-danger btn-block',{'disabled': !this.props.enableBtnClearCart });\r\n\r\n    return<div>\r\n            <h1>Cart</h1>\r\n    <div className=\"row\">\r\n\r\n        {this.props.cartItems.map((item) =>\r\n            <div className=\"col-3\" key={item.product.id}>\r\n                <CartItem item={item} />\r\n            </div>)\r\n        }\r\n    </div>\r\n    <br />\r\n    <h3>\r\n        Total: {this.props.total}$\r\n            </h3>\r\n\r\n    <button disabled={!this.props.enableBtnPlaceOrder} className={btnPlaceOrderClasses} onClick={this.props.placeOrder}>Place order</button>\r\n    <button disabled={!this.props.enableBtnClearCart} className={btnClearCartClasses} onClick={this.props.clearCart}>Clear cart</button>\r\n        </div >;\r\n    }\r\n}\r\nconst mountStateToProps = (state) => {\r\n    var enableBtn = false;\r\n \r\n    if (typeof (state.cart) != undefined && state.cart.length > 0)\r\n        enableBtn = true;\r\n\r\n    return {\r\n        cartItems: state.cart,\r\n        total: state.cart.reduce((total, item) => total + item.quantity * item.product.price, 0),\r\n        enableBtnPlaceOrder: enableBtn,\r\n        enableBtnClearCart:enableBtn\r\n    };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         clearCart: () => dispatch(clearCart()),\r\n//     };\r\n// }\r\n\r\nexport default connect(mountStateToProps, {clearCart,placeOrder})(Cart);","import React, { Component } from \"react\";\r\nimport { getProductById } from '../api/products'\r\nimport { addToCart } from '../store/actions/actions'\r\nimport { connect } from \"react-redux\"\r\nclass Product extends Component {\r\n    state = {\r\n        loading: true,\r\n        product: {},\r\n        quantity: 0\r\n    };\r\n    changeQuantity = (event) => {\r\n\r\n        if (event.target.value > 20) {\r\n            alert(\"Max number is 20\");\r\n            //TODO add modal and delete alert\r\n            this.setState({\r\n                quantity: 20\r\n            });\r\n\r\n        } else {\r\n            this.setState({\r\n                quantity: event.target.value\r\n            });\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id;\r\n\r\n        getProductById(id).then(producti =>\r\n            setTimeout(() =>\r\n                this.setState({ product: producti, loading: false }), 1000\r\n\r\n            ));\r\n\r\n    };\r\n    addToCart = (product) => {\r\n     \r\n        return this.props.addToCart(product, this.state.quantity);\r\n    };\r\n    render() {\r\n        if (this.state.loading)\r\n            return 'loading ...';\r\n        const product = this.state.product;\r\n        return (<div className=\"row\">\r\n            <div className=\"col-6\">\r\n                <img src={product.image} width={'100%'} ></img>\r\n            </div>\r\n            <div className=\"col-6\">\r\n                <h1>{product.name}</h1>\r\n                <p>Price: {product.price}$</p>\r\n                <p> {product.description}</p>\r\n\r\n                <input type=\"number\" max=\"20\" min=\"0\" value={this.state.quantity} onChange={this.changeQuantity} />\r\n                <br />\r\n                <br />\r\n                <p> Total: {this.state.quantity * product.price}</p>\r\n                <button className=\"btn btn-primary\" onClick={() => this.addToCart(product)} >Add to cart</button>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToCart: (product, quantity) => dispatch(addToCart(product, quantity)),\r\n    };\r\n}\r\n\r\n\r\n    \r\n\r\nexport default connect(null, mapDispatchToProps)(Product);","import React, { Component } from \"react\";\r\nimport './cartIcon.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from \"react-redux\"\r\n\r\nexport  class CartIcon extends Component {\r\n    render(){\r\n        return (<div id = \"cart-icon\"> \r\n        <Link to = \"/cart\">\r\n            <i className=\"fa fa-shopping-cart\"> </i>\r\n    <span className=\"badge badge-danger\">{this.props.totalQuantity}</span>\r\n        </Link>\r\n        </div>);\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\nreturn {\r\ntotalQuantity:state.cart.reduce((total,item)=>total + parseInt(item.quantity),0)\r\n};\r\n};\r\nexport default connect(mapStateToProps)(CartIcon);","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport cartReducer from './reducers/index'\r\nimport thunk from \"redux-thunk\"\r\nimport throttle from 'lodash.throttle'\r\nfunction loadStateFromLocalStorage() {\r\n    try {\r\n        const state = localStorage.getItem('cart');\r\n        if (state !== null) {\r\n            return JSON.parse(state);\r\n\r\n        }\r\n    } catch (e) {\r\n        //ignore error \r\n    }\r\n  \r\n        return {\r\n            cart:[]\r\n        };\r\n    \r\n}\r\n\r\nfunction saveToLocalStorage(state) {\r\n    console.log('save state');\r\n    localStorage.setItem('cart', JSON.stringify(state))\r\n}\r\n\r\nconst initialState = loadStateFromLocalStorage();\r\n\r\n\r\nconst enableReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst applyThunk = applyMiddleware(thunk);\r\n\r\nconst store = createStore(cartReducer, initialState, compose(applyThunk, enableReduxDevTools));\r\n\r\n//save state every 2 s\r\n\r\n    store.subscribe(throttle(() => \r\nsaveToLocalStorage(store.getState()),2000));\r\nexport default store;","import { ADD_TO_CART, REMOVE_FROME_CART, CLEAR_CART,PLACE_ORDER } from \"../actions/types\";\r\n\r\nexport default function cartReducer(state, action) {\r\n\r\n    switch (action.type) {\r\n        case ADD_TO_CART: {\r\n            return addToCard(state, action);\r\n        }\r\n        case REMOVE_FROME_CART: {\r\n            return removeFromCart(state, action);\r\n        }\r\n        case PLACE_ORDER: {\r\n            return placeOrder(state, action);\r\n        }\r\n        case CLEAR_CART: {\r\n            return clearCart(state, action);\r\n        }\r\n    \r\n    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nfunction addToCard(state, action) {\r\n    //if the product is in the cart so increese the quantity else add it \r\n    let item = state.cart.find(item => item.product.id === action.product.id);\r\n    if (item) {\r\n        item.quantity = parseInt(action.quantity) + parseInt(item.quantity);\r\n        return {\r\n            cart: [...state.cart]\r\n        };\r\n    } else {\r\n        return {\r\n            cart: [\r\n                ...state.cart,\r\n                {\r\n                    product: action.product,\r\n                    quantity: action.quantity\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction removeFromCart(state, action) {\r\n    if (!window.confirm(\"Are yous sure want to delete this item.\"))\r\n    return state;\r\n    let index = state.cart.findIndex(item => item.product.id === action.id);\r\n    if (index > -1)\r\n        state.cart.splice(index, 1)\r\n    return { cart: [...state.cart] };\r\n}\r\n\r\nfunction placeOrder(state, action) {\r\n    alert(action.result.message);\r\n    if (action.result.code === 200)\r\n        return { cart: [] };\r\n    else return state;\r\n}\r\n\r\nfunction clearCart(state, action) {\r\n  if (window.confirm(\"Are yous sure want to clear Cart\"))\r\n        return { cart: [] };\r\n \r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route,Link} from 'react-router-dom'\nimport Home from './pages/home'\nimport Products from './pages/products'\nimport Cart from './pages/cart'\nimport Product from './pages/product'\nimport CartIcon from './components/cartIcon'\nimport store from './store/store'\nimport { Provider} from 'react-redux'\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"container\">\n     <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <Link className=\"navbar-brand\" to=\"#\">Store</Link>\n  <button className=\"navbar-toggler\" type=\"button\" \n  data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" \n  aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\"\n   aria-label=\"Toggle navigation\">\n     \n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n    <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n      <li className=\"nav-item active\">\n        <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/products\">Products</Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/cart\">Cart</Link>\n      </li>\n \n    </ul>\n  \n  </div>\n  \n  <CartIcon/>\n</nav>\n<Route  path='/' component={Home} exact/>\n<Route  path='/products' component={Products} exact />\n<Route  path='/products/:id' component={Product} />\n<Route  path='/cart' component={Cart} />\n\n\n    </div>\n    </Router>\n  );\n}\n\nfunction AppWithStore(){\n\n  return (\n    <Provider store = {store}>\n      <App/>\n      </Provider>\n  ); \n\n}\n\nexport default AppWithStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}